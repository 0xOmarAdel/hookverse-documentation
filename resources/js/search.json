[[{"l":"Hookverse","p":["Welcome to the documentation for the hookverse package, a collection of custom React hooks for various functionalities."]},{"l":"Introduction","p":["hookverse is a collection of reusable React hooks designed to simplify common tasks in React application development. Each hook addresses specific use cases and aims to enhance the development experience by providing easy-to-use abstractions."]},{"l":"Installation","p":["To install the hookverse package, use your preferred package manager. For example, with npm:"]},{"l":"Contribution","p":["Contributions are welcome from anyone! Feel free to contribute by opening issues, submitting pull requests, or suggesting improvements. Let's build hookverse together!"]}],[{"l":"useClickOutside","p":["The useClickOutside hook is a custom React hook designed to invoke a callback when a click event occurs outside a specified element."]},{"l":"Usage"},{"l":"Parameters","p":["Name","Description","callbackFun","The callback function to be invoked on click outside the specified element."]},{"l":"API"},{"l":"elementRef","p":["A React RefObject that should be assigned to the HTML element for which you want to detect clicks outside."]},{"l":"Example","p":["In this example, the useClickOutside hook is utilized to detect clicks outside a specified element, triggering the provided callback function."]}],[{"l":"useEffectExceptFirstRender","p":["The useEffectExceptFirstRender hook is a custom React hook designed to execute an effect function after the initial render, excluding the first render."]},{"l":"Usage"},{"l":"Parameters","p":["Name","Description","func","The effect function to be executed after the initial render, excluding the first render.","deps","An array of dependencies to watch for changes. The effect function will be re-executed if any of these dependencies change."]},{"l":"Example","p":["In this example, the effect function will be executed on every render except the first one."]}],[{"l":"useScrollBlock","p":["The useScrollBlock hook, part of the \"hookverse\" package, provides a simple way to block and allow scrolling on a webpage. It is designed to be used in React applications."]},{"l":"Usage"},{"l":"API"},{"i":"blockscroll","l":"blockScroll()","p":["This function blocks scrolling by applying styles to the html and body elements, preventing scrolling on the page."]},{"i":"allowscroll","l":"allowScroll()","p":["This function allows scrolling by removing the styles applied to the html and body elements, restoring the normal scrolling behavior."]},{"l":"Example","p":["In this example, clicking the \"Block Scroll\" button will prevent scrolling on the page, and clicking the \"Allow Scroll\" button will restore the normal scrolling behavior."]}]]