[[{"l":"Hookverse","p":["Welcome to the documentation for the hookverse package, a collection of custom React hooks for various functionalities."]},{"l":"Introduction","p":["hookverse is a collection of reusable React hooks designed to simplify common tasks in React application development. Each hook addresses specific use cases and aims to enhance the development experience by providing easy-to-use abstractions."]},{"l":"Installation","p":["To install the hookverse package, use your preferred package manager. For example, with npm:"]},{"l":"Contribution","p":["Contributions are welcome from anyone! Feel free to contribute by opening issues, submitting pull requests, or suggesting improvements. Let's build hookverse together!"]}],[{"l":"useAxios","p":["The useAxios hook is a custom React hook designed to simplify HTTP requests using Axios with React functional components."]},{"l":"Usage"},{"l":"API"},{"l":"runAxios","p":["A function to execute the Axios request."]},{"l":"data","p":["The response data from the API request."]},{"l":"loading","p":["A boolean indicating if the data is currently being fetched."]},{"l":"isExecuting","p":["A boolean indicating if the Axios request is currently being executed."]},{"l":"error","p":["A boolean indicating if an error occurred during the Axios request."]},{"i":"example-data-fetching","l":"Example: Data Fetching"},{"i":"example-form-submission","l":"Example: Form Submission","p":["In the first example, the useAxios hook is utilized to perform an HTTP GET request for data fetching. The runAxios function is called to initiate the request, and loading and error states are managed accordingly. Additionally, a button is provided to manually trigger the request, with disabled state based on loading.","In the second example, the useAxios hook is utilized to perform an HTTP POST request for form submission. The runAxios function is called to initiate the request when the form is submitted, and loading and error states are managed accordingly. The submit button is disabled based on isExecuting to prevent multiple submissions while the request is in progress. Additionally, any errors that occur during form submission are displayed to the user."]}],[{"l":"useClickOutside","p":["The useClickOutside hook is a custom React hook designed to invoke a callback when a click event occurs outside a specified element."]},{"l":"Usage"},{"l":"Parameters","p":["Name","Description","callbackFun","The callback function to be invoked on click outside the specified element."]},{"l":"API"},{"l":"elementRef","p":["A React RefObject that should be assigned to the HTML element for which you want to detect clicks outside."]},{"l":"Example","p":["In this example, the useClickOutside hook is utilized to detect clicks outside a specified element, triggering the provided callback function."]}],[{"l":"useEffectExceptFirstRender","p":["The useEffectExceptFirstRender hook is a custom React hook designed to execute an effect function after the initial render, excluding the first render."]},{"l":"Usage"},{"l":"Parameters","p":["Name","Description","func","The effect function to be executed after the initial render, excluding the first render.","deps","An array of dependencies to watch for changes. The effect function will be re-executed if any of these dependencies change."]},{"l":"Example","p":["In this example, the effect function will be executed on every render except the first one."]}],[{"l":"useScrollBlock","p":["The useScrollBlock hook, part of the \"hookverse\" package, provides a simple way to block and allow scrolling on a webpage. It is designed to be used in React applications."]},{"l":"Usage"},{"l":"API"},{"i":"blockscroll","l":"blockScroll()","p":["This function blocks scrolling by applying styles to the html and body elements, preventing scrolling on the page."]},{"i":"allowscroll","l":"allowScroll()","p":["This function allows scrolling by removing the styles applied to the html and body elements, restoring the normal scrolling behavior."]},{"l":"Example","p":["In this example, clicking the \"Block Scroll\" button will prevent scrolling on the page, and clicking the \"Allow Scroll\" button will restore the normal scrolling behavior."]}]]